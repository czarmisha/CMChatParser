# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Watcher Noob

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Installing OS dependencies
      run: |
        sudo apt-get install libxml2-dev libxslt-dev python-dev python3-testresources
    - name: Importing creadiatels
      run: |
        echo "export SITE_URL=https://service7.rumbletalk.net/Eo3h031D/" >> post_upload.sh
        echo "export LOGIN_USERNAME=${{ secrets.LOGIN_USERNAME }}" >> post_upload.sh
        echo "export LOGIN_PASSWORD=${{ secrets.LOGIN_PASSWORD }}" >> post_upload.sh
        echo "export BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> post_upload.sh
        echo "export CHAT_ID=${{ secrets.CHAT_ID }}" >> post_upload.sh
        echo "export BOT_API_URL=https://api.telegram.org/bot" >> post_upload.sh
    
    - name: Install dependencies 
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install wheel

    - name: Creating archive
      run: |
        find . -name \__pycache__ -exec rm -rv {} +
        tar cvf cm_chat.tar ./*     
        
    - name: Uploading prepared files
      uses: marcodallasanta/ssh-scp-deploy@v1.1.0
      with:
        local: 'cm_chat.tar'                               # Local file path - REQUIRED false - DEFAULT ./
        remote: '~/'                                                 # Remote file path - REQUIRED false - DEFAULT ~/
        host: ${{secrets.PROD_IP}}
        port: ${{secrets.PORT}}                                      # Remote server address - REQUIRED true
        user: ${{secrets.PROD_USERNAME}}                             # Remote server user - REQUIRED true
        key: ${{secrets.SSH_TO_SERVER}}                              # Remote server private key - REQUIRED at least one of "password" or "key"
        pre_upload: echo "This will be executed before the upload!"  # Command to run via ssh before scp upload - REQUIRED false
        post_upload: tar -xvf cm_chat.tar --overwrite --dir ~/cm_chat
        ssh_options: -o StrictHostKeyChecking=no                     # A set of ssh_option separated by -o - REQUIRED false - DEFAULT -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
        scp_options: -v               
   
    - name: Post upload script
      uses: cross-the-world/ssh-pipeline@master
      env:
        WELCOME: "Welcome to the server"
      with:
        host: ${{secrets.PROD_IP}}
        port: ${{secrets.PORT}}
        user: ${{secrets.PROD_USERNAME}}
        key:  ${{secrets.SSH_TO_SERVER}}
        connect_timeout: 10s
        script: |
          cp ~/cm_chat/post_upload.sh ~
          chmod +x ~/post_upload.sh
          sudo /home/ubuntu/post_upload.sh
